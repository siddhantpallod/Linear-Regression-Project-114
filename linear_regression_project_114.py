# -*- coding: utf-8 -*-
"""Linear-Regression-Project-114

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17hmY2NwbTeNvyQRM_mD8GmrDQNl9cTaN
"""

import pandas as pd
import plotly.express as px

from google.colab import files
df = files.upload()

df = pd.read_csv('main.csv')

toeflScore = df['TOEFL Score'].tolist()
chanceOfAdmit = df['Chance of Admit '].tolist()

fig = px.scatter(x = toeflScore, y = chanceOfAdmit)
fig.show()

m = 0.01
c = -0.3
y = []

for i in toeflScore:
    y1 = m * i + c
    y.append(y1)

fig1 = px.scatter(x = toeflScore, y = chanceOfAdmit)
fig1.update_layout(shapes = [dict(type = 'line', y0 = min(y), y1 = max(y), x0 = min(toeflScore), x1 = max(toeflScore))])
fig1.show()

x = 600
y = m * x + c

print("Chances of Admission", {x}, "is", {y})

import numpy as np

toeflScore1 = np.array(toeflScore)
chanceOfAdmit1 = np.array(chanceOfAdmit)

m,c = np.polyfit(toeflScore1, chanceOfAdmit1, 1)
y2value = []

for a in toeflScore1:
    y2 = m * a + c
    y2value.append(y2)

fig2 = px.scatter(x = toeflScore1, y = chanceOfAdmit1)
fig2.update_layout(shapes = [dict(type = 'line', y0 = min(y2value), y1 = max(y2value), x0 = min(toeflScore1), x1 = max(toeflScore1))])
fig2.show()

x = 600
y = m * x + c

print("Chances of Admission", {x}, "is", {y})